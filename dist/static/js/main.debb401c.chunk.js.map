{"version":3,"sources":["utils/theme.js","utils/colors.js","components/Layout/Layout.js","components/H1/H1.js","components/Container/Container.js","components/Form/Form.js","components/Input/Input.js","components/Button/Button.js","actions/postsActions.js","actions/types.js","components/Search/Search.js","actions/searchActions.js","components/Card/Card.js","components/Post/Post.js","components/Loader/Loader.js","components/H2/H2.js","App.js","serviceWorker.js","reducers/postsReducer.js","reducers/searchReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["theme","colors","white","graphite","grey","yellowOrange","orange","orangeDark","blue","blueLight","font","thin","regular","bold","media","phone","tablet","laptop","desktop","GlobalStyle","createGlobalStyle","Wrapper","styled","div","Layout","children","H1","h1","props","Container","LowerContainer","MasonryContainer","Form","form","InputText","input","Button","button","LinkButton","a","isLoadingStateChange","changeState","dispatch","type","payload","postsFoundChangeState","postsNotFoundChangeState","fetchPosts","getState","searchTerm","search","axios","get","then","response","dataReceived","data","length","map","catch","error","console","log","Search","onChange","e","setState","target","name","value","onSubmit","preventDefault","state","searchPosts","this","placeholder","required","Component","connect","posts","items","postsNotFound","Card","CardHeader","CardTitle","h3","CardBody","CardText","p","CardSmallText","CardImage","img","CardImageSmall","CardFooter","Post","forceUpdate","text","limit","shortened","indexOf","substring","postList","post","key","id","subreddit_name_prefixed","truncateString","title","author","preview","src","images","source","url","selftext","isBlue","href","permalink","isLoading","spin","keyframes","Loader","H2","h2","App","isLarge","postsFound","Boolean","window","location","hostname","match","initState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.debb401c.chunk.js","sourcesContent":["import { colors } from './colors';\r\n\r\nexport const theme = {\r\n  colors,\r\n  font: {\r\n    thin: 300,\r\n    regular: 400,\r\n    bold: 700,\r\n  },\r\n  media: {\r\n    phone: '@media (min-width: 320px)',\r\n    tablet: '@media (min-width: 728px)',\r\n    laptop: '@media (min-width: 1024px)',\r\n    desktop: '@media (min-width: 1280px)'\r\n  }\r\n}","export const colors = {\r\n  white: '#fff',\r\n  graphite: '#666',\r\n  grey: '#8a96a3',\r\n  yellowOrange: '#ff9933',\r\n  orange: '#ed5f55',\r\n  orangeDark: '#d8574e',\r\n  blue: '#3a81b7',\r\n  blueLight: '#64a0ce'\r\n};\r\n\r\n// d02216","import React from 'react';\r\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\r\nimport { theme } from '../../utils/theme';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n@import url('https://fonts.googleapis.com/css?family=Nunito:300,400,700&display=swap');\r\n\r\n  body {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family: 'Roboto';\r\n    color: white;\r\n    font-family: 'Nunito', sans-serif;\r\n    background: ${({ theme }) => theme.colors.grey};\r\n  }\r\n\r\n  *, *::before, *::after {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst Layout = ({ children }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <>\r\n      <GlobalStyle />\r\n      <Wrapper>\r\n        {children}\r\n      </Wrapper>\r\n    </>\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default Layout;","import styled from 'styled-components'\r\n\r\nconst H1 = styled.h1`\r\n  margin-top: 3em;\r\n  font-size: 2em;\r\n  color:  ${(props) => props.theme.colors.white}\r\n  font-weight: ${(props) => props.theme.font.bold}\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    font-size: 2.5em;\r\n  }\r\n`\r\n\r\nexport default H1","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`\r\nconst LowerContainer = styled(Container)`\r\n  margin-top: 2em;\r\n`\r\nconst MasonryContainer = styled.div`\r\n  width: 100%;\r\n  margin-top: 2em;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-content: center;\r\n\r\n  ${({ theme }) => theme.media.laptop} {\r\n    width: 90%;\r\n    flex-flow: column wrap;\r\n    max-height: 4000px;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    width: 75%;\r\n  }\r\n`\r\n\r\nexport { Container, LowerContainer, MasonryContainer }","import styled from 'styled-components'\r\n\r\nconst Form = styled.form`\r\n  width: 90%;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nexport default Form","import styled from 'styled-components'\r\n\r\nconst InputText = styled.input`\r\n  margin-bottom: 0.5em;\r\n  border: 0;\r\n  width: 100%;\r\n  padding: 1em;\r\n  border-radius: 4px;\r\n  font-size: 1em;\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    display: inline-block;\r\n    max-width: 400px;\r\n    margin-right: 0.5em;\r\n  }\r\n`\r\n\r\nexport { InputText }","import styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 1em 2.5em;\r\n  border: none;\r\n  background: linear-gradient(to bottom, ${(props) => props.theme.colors.orange}, ${(props) => props.theme.colors.yellowOrange});\r\n  color: ${(props) => props.theme.colors.white};\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1em;\r\n  position: relative;\r\n  z-index: 1;\r\n\r\n  &:before {\r\n    content: \"Search\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: inherit;\r\n    background: linear-gradient(to top, ${(props) => props.theme.colors.orange}, ${(props) => props.theme.colors.yellowOrange});\r\n    opacity: 0;\r\n    z-index: 2;\r\n    line-height: 3.2;\r\n    transition: opacity .4s linear;\r\n  }\r\n\r\n  &:hover {\r\n    &:before {\r\n      transition: opacity .4s linear;\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    display: inline-block;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst WideButton = styled(Button)`\r\n  display: block;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  padding: 0.7em 0;\r\n`\r\nconst LinkButton = styled.a`\r\n  display: block;\r\n  margin: 0 auto;\r\n  width: 60%;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  padding: 0.5em 0;\r\n  background: linear-gradient(to bottom, ${(props) => props.theme.colors.orange}, ${(props) => props.theme.colors.yellowOrange});\r\n  color: ${(props) => props.theme.colors.white};\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1em;\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: \"Read more\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: inherit;\r\n    background: linear-gradient(to top, ${(props) => props.theme.colors.orange}, ${(props) => props.theme.colors.yellowOrange});\r\n    opacity: 0;\r\n    z-index: 2;\r\n    line-height: 2.45;\r\n    transition: opacity .4s linear;\r\n  }\r\n\r\n  &:hover {\r\n    &:before {\r\n      transition: opacity .4s linear;\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\n\r\nexport { Button, WideButton, LinkButton }","import { FETCH_POSTS, IS_LOADING_CHANGE_STATE, POSTS_FOUND_CHANGE_STATE, POSTS_NOT_FOUND_CHANGE_STATE } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const isLoadingStateChange = (changeState) => dispatch => {\r\n  dispatch({\r\n    type: IS_LOADING_CHANGE_STATE,\r\n    payload: changeState\r\n  })\r\n}\r\n\r\nexport const postsFoundChangeState = (changeState) => dispatch => {\r\n  dispatch({\r\n    type: POSTS_FOUND_CHANGE_STATE,\r\n    payload: changeState\r\n  })\r\n}\r\n\r\nexport const postsNotFoundChangeState = (changeState) => dispatch => {\r\n  dispatch({\r\n    type: POSTS_NOT_FOUND_CHANGE_STATE,\r\n    payload: changeState\r\n  })\r\n}\r\n\r\nexport const fetchPosts = () => (dispatch, getState) => {\r\n  const { searchTerm } = getState().search\r\n  axios.get(`http://www.reddit.com/search.json?q=${searchTerm.search}&sort=new&limit=20&raw_json=1`)\r\n    .then(response => {\r\n      const dataReceived = response.data.data.children\r\n      if (dataReceived.length === 0) {\r\n        dispatch(postsFoundChangeState(false))\r\n        dispatch(isLoadingStateChange(false))\r\n        dispatch(postsNotFoundChangeState(true))\r\n      } else {\r\n        dispatch({\r\n          type: FETCH_POSTS,\r\n          payload: dataReceived.map(data => data.data)\r\n        })\r\n        dispatch(isLoadingStateChange(false))\r\n        dispatch(postsFoundChangeState(true))\r\n      }\r\n    })\r\n    .catch(error => console.log(error));\r\n}","export const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const SEARCH_POSTS = 'SEARCH_POSTS';\r\nexport const IS_LOADING_CHANGE_STATE = 'IS_LOADING_CHANGE_STATE';\r\nexport const POSTS_FOUND_CHANGE_STATE = 'FOUND_POSTS_CHANGE_STATE';\r\nexport const POSTS_NOT_FOUND_CHANGE_STATE = 'POSTS_NOT_FOUND_CHANGE_STATE';","import React, { Component } from 'react';\r\nimport { Container } from '../Container/Container';\r\nimport Form from '../Form/Form';\r\nimport { InputText } from '../Input/Input';\r\nimport { Button } from '../Button/Button';\r\nimport { connect } from 'react-redux';\r\nimport { searchPosts } from '../../actions/searchActions';\r\nimport { fetchPosts, isLoadingStateChange, postsNotFoundChangeState } from '../../actions/postsActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: ''\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    this.props.postsNotFoundChangeState(false);\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const searchTerm = {\r\n      search: this.state.search\r\n    }\r\n    this.props.searchPosts(searchTerm)\r\n    this.props.fetchPosts()\r\n    this.props.isLoadingStateChange(true)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Form onSubmit={this.onSubmit}>\r\n          <InputText type=\"text\" placeholder=\"Enter search term...\" name=\"search\" onChange={this.onChange} value={this.state.search} required />\r\n          <Button>Search</Button>\r\n        </Form>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  searchPosts: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchTerm: state.search.searchTerm,\r\n    posts: state.posts.items,\r\n    postsNotFound: state.posts.postsNotFound\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { searchPosts, fetchPosts, isLoadingStateChange, postsNotFoundChangeState })(Search)","import { SEARCH_POSTS } from './types';\r\n\r\nexport const searchPosts = (searchTerm) => dispatch => {\r\n  dispatch({\r\n    type: SEARCH_POSTS,\r\n    payload: searchTerm\r\n  })\r\n}","import styled from 'styled-components'\r\n\r\nconst Card = styled.div`\r\n  width: 90%;\r\n  height: auto;\r\n  margin: 0.5em auto;\r\n  padding-bottom: 3em;\r\n  background-color: ${(props) => props.theme.colors.white};\r\n  border-radius: 4px;\r\n  box-shadow: 0 3px 5px -3px ${(props) => props.theme.colors.graphite};\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:nth-child(3n+1) { order: 1; }\r\n  &:nth-child(3n+2) { order: 2; }\r\n  &:nth-child(3n)   { order: 3; }\r\n\r\n  ${({ theme }) => theme.media.laptop} {\r\n    width: 32%;\r\n    margin: 0.5em;\r\n  }\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  width: 100%;\r\n  padding: 0.7em;\r\n  background: linear-gradient(to bottom, ${(props) => props.theme.colors.blue}, ${(props) => props.theme.colors.blueLight});\r\n  text-align: center;\r\n  color: ${(props) => props.theme.colors.white};\r\n  font-size: 1.1em;\r\n`\r\n\r\nconst CardTitle = styled.h3`\r\n  margin: 0;\r\n  font-size: 1.2em;\r\n  color: ${(props) => props.theme.colors.graphite};\r\n`\r\nconst CardBody = styled.div`\r\n  padding: 0.9em;\r\n`\r\n\r\nconst CardText = styled.p`\r\n  font-size: 1em;\r\n  color: ${(props) => props.theme.colors.graphite};\r\n`\r\n\r\nconst CardSmallText = styled(CardText)`\r\n  font-size: .8em;\r\n  font-weight: ${(props) => props.theme.font.bold};\r\n  color: ${(props) => props.theme.colors.blue};\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  width: 60%;\r\n  height: auto;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst CardImageSmall = styled.img`\r\n  width: 70px;\r\n  height: auto;\r\n`\r\n\r\nconst CardFooter = styled.div`\r\n  padding: 0.9em;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n`\r\n\r\nexport { Card, CardHeader, CardTitle, CardBody, CardText, CardSmallText, CardFooter, CardImage, CardImageSmall }","import React, { Component } from 'react';\r\nimport { MasonryContainer } from '../Container/Container';\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, CardSmallText, CardFooter, CardImage, CardImageSmall } from '../Card/Card';\r\nimport { LinkButton } from '../Button/Button';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts, isLoadingStateChange } from '../../actions/postsActions';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.forceUpdate()\r\n  }\r\n  truncateString(text, limit) {\r\n    const shortened = text.indexOf(\" \", limit);\r\n    if (shortened === -1) return text;\r\n    return text.substring(0, shortened) + \" ...\";\r\n  }\r\n  render() {\r\n    const { posts } = this.props\r\n    const postList = posts.length ? (\r\n      posts.map(post => {\r\n        return (\r\n          <Card key={post.id}>\r\n            <CardHeader>\r\n              {post.subreddit_name_prefixed}\r\n            </CardHeader>\r\n            <CardBody>\r\n              <CardTitle>\r\n                {this.truncateString(post.title, 80)}\r\n              </CardTitle>\r\n              <CardSmallText>\r\n                Posted by: {post.author}\r\n              </CardSmallText>\r\n              {post.preview ? <CardImage src={post.preview.images[0].source.url} /> : <CardImageSmall src={'https://cdn.comparitech.com/wp-content/uploads/2017/08/reddit-1.jpg'} />}\r\n              <CardText>\r\n                {this.truncateString(post.selftext, 200)}\r\n              </CardText>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <LinkButton isBlue href={`http://www.reddit.com${post.permalink}`} target=\"_blank\">Read more</LinkButton>\r\n            </CardFooter>\r\n          </Card>\r\n        )\r\n      })\r\n    ) : null\r\n    return (\r\n      <MasonryContainer>\r\n        {postList}\r\n      </MasonryContainer>\r\n    )\r\n  }\r\n}\r\n\r\nPost.propTypes = {\r\n  fetchPosts: PropTypes.func.isRequired,\r\n  posts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.posts.items,\r\n    searchTerm: state.search.searchTerm.search,\r\n    isLoading: state.posts.isLoading,\r\n    postsNotFound: state.posts.postsNotFound\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPosts, isLoadingStateChange })(Post)","import styled, { keyframes } from 'styled-components'\r\n\r\nconst spin = keyframes`\r\n  0% {\r\n    transform: rotate(0deg)\r\n  }\r\n  100% {\r\n    transform: rotate(360deg)\r\n  }\r\n`\r\n\r\nconst Loader = styled.div`\r\n  background: linear-gradient(${(props) => props.theme.colors.yellowOrange}, ${(props) => props.theme.colors.orange});\r\n  width: 40px;\r\n  height: 40px;\r\n  border-right-color: transparent;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  animation: ${spin} .5s ease-in-out infinite;\r\n`\r\n\r\nexport default Loader","import styled from 'styled-components'\r\n\r\nconst H2 = styled.h2`\r\n  align-self: center;\r\n  font-size:  1.2em;\r\n  color:  ${(props) => props.theme.colors.white}\r\n  font-weight: ${(props) => props.theme.font.bold}\r\n`\r\n\r\nexport default H2","import React, { Component } from 'react';\r\nimport Layout from './components/Layout/Layout';\r\nimport H1 from './components/H1/H1';\r\nimport Search from './components/Search/Search';\r\nimport Post from './components/Post/Post';\r\nimport { connect } from 'react-redux';\r\nimport Loader from './components/Loader/Loader'\r\nimport { LowerContainer } from './components/Container/Container';\r\nimport H2 from './components/H2/H2'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <Layout>\r\n        <H1 isLarge>Search Reddit app</H1>\r\n        <Search></Search>\r\n        {this.props.postsNotFound ? <H2>Sorry, nothing found for \"{this.props.searchTerm}\"</H2> : null}\r\n        {this.props.isLoading ? <LowerContainer><Loader /></LowerContainer> : null}\r\n        {this.props.postsFound ? <Post /> : null}\r\n      </Layout >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"SearchTerm:\", state.search.searchTerm)\r\n  return {\r\n    postsFound: state.posts.postsFound,\r\n    postsNotFound: state.posts.postsNotFound,\r\n    isLoading: state.posts.isLoading,\r\n    searchTerm: state.search.searchTerm.search\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { FETCH_POSTS, POSTS_FOUND_CHANGE_STATE, IS_LOADING_CHANGE_STATE, POSTS_NOT_FOUND_CHANGE_STATE } from '../actions/types';\r\n\r\nconst initState = {\r\n  postsFound: false,\r\n  postsNotFound: false,\r\n  isLoading: false,\r\n  items: []\r\n}\r\n\r\nexport default function (state = initState, action) {\r\n  switch (action.type) {\r\n    case FETCH_POSTS:\r\n      return {\r\n        ...state,\r\n        items: action.payload\r\n      }\r\n    case IS_LOADING_CHANGE_STATE:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      }\r\n    case POSTS_FOUND_CHANGE_STATE:\r\n      return {\r\n        ...state,\r\n        postsFound: action.payload\r\n      }\r\n    case POSTS_NOT_FOUND_CHANGE_STATE:\r\n      return {\r\n        ...state,\r\n        postsNotFound: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SEARCH_POSTS } from '../actions/types';\r\n\r\nconst initState = {\r\n  searchTerm: ''\r\n}\r\n\r\nexport default function (state = initState, action) {\r\n  switch (action.type) {\r\n    case SEARCH_POSTS:\r\n      return {\r\n        ...state,\r\n        searchTerm: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport postsReducer from './postsReducer';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({\r\n  posts: postsReducer,\r\n  search: searchReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst initState = {}\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n)\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store'\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}